#!/usr/bin/env bash

defaultcmd=""

image=lutris
name=lutris_running
cmd=$defaultcmd
opts=()
data="lutris-data-$USER"
do_sound=true
do_update=false

local_data="$HOME/.local/share/lutris"

usage() {
    echo "
Usage: $0 [opts] [image]

Options:
    -h, --help          display this message and exit
    --sound             enable sound (requires PulseAudio and Linux)
    --cmd CMD           initial command (default: $cmd)
    --data-volume VOL   docker volume to store data (default: ${data})
    --reset             reset local data and docker volume
    --name NAME         container name (default: $name)
    --shell             start an interactive shell instead of MTGO
    --dry-run           simply print the docker run command
    --no-tz             disable timezone detection
    --debug             enable debug information
    --update            update docker image before run
    -e                  docker run option (environment)
    -v                  docker run option (mount volume)
    -u                  docker run option (change user)
"
}

lopts="dry-run,help,shell,cmd:,name:"
lopts="${lopts},data-volume:,reset"
lopts="${lopts},sound,disable-sound"
lopts="${lopts},no-tz"
lopts="${lopts},update"
lopts="${lopts},debug"

getopt=getopt
brew_getopt="/usr/local/opt/gnu-getopt/bin/getopt"
if [[ $OSTYPE == darwin* ]] && [ -x $brew_getopt ]; then
    getopt=$brew_getopt
fi

args="$($getopt -n "${0}" -o hv:u:e: --longoptions $lopts -- "${0}" "${@}")"
if [ $? -ne 0 ]; then
    usage
    exit 1
fi
eval set -- $args

do_run=true
do_reset=false
do_test=false

mytz=${TZ:-}
detect_tz=false
if [ -z "${mytz}" ]; then
    detect_tz=true
fi

while [ -n "${1:-}" ]; do
case "${1:-}" in
    --help|-h)  usage && exit 0 ;;
    --data-volume) shift
        data="$1" ;;
    --debug)
        opts+=("-e" "WINEDEBUG=");;
    --dry-run)
        do_run=false ;;
    --sound)
        do_sound=true ;;
    --reset)
        do_reset=true ;;
    --shell)
        cmd="bash"
        cmdargs=""
        opts+=("-it") ;;
    --cmd) shift;
        cmd="$1"
        cmdargs=""
        opts+=("-it") ;;
    --no-tz)
        detect_tz=false
        mytz="" ;;
     --name) shift;
        name="$1" ;;
     --update)
        do_update=true ;;
     -e|-v|-u)
         opts+=("$1" "$2");;
     --) shift
         ;;
esac
shift
done

run() {
    echo "${@}"
    if $do_run; then
        "${@}"
    fi
}

_host_uid=$(id -u)
if [[ ${_host_uid} == 0 ]]; then
    echo "Error: you should not run this script as root."
    echo "Instead, consider adding your user to the 'docker' group:"
    echo "    sudo usermod -aG docker \$USER"
    echo "then restarting your session."
    exit 1
fi

if $detect_tz; then
    if [ -f /etc/timezone ]; then
        mytz=$(</etc/timezone)
    elif [ -L /etc/localtime ]; then
        mytz=$(readlink /etc/localtime |cut -d/ -f 5-)
    elif [[ $OSTYPE == linux-gnu ]]; then
        _tz="$(timedatectl 2>/dev/null|grep "Time zone"|cut -d: -f2|cut -d' ' -f 2)"
        if [ -n ${_tz} ] && [[ "${_tz}" != "n/a" ]]; then
            mytz=$_tz
        fi
    fi
fi

if $do_reset; then
    msg="You are about to delete ${local_data}"
    msg="${msg} and wipe docker volume ${data}"
    echo "WARNING: $msg"
    echo "Press Enter to continue, CTRL+C to abort"
    read
    rm -vrf "${local_data}"
    run docker volume rm $data
fi
if $do_update; then
    run docker pull ${image}
fi

set -e

if [ ! -d ${local_data} ]; then
    mkdir -p ${local_data}
fi

opts+=("-v" "${data}:/home/user")

XSOCK="/tmp/.X11-unix"
XAUTH="${local_data}/Xauthority"
> ${XAUTH}
xauth nlist ${DISPLAY} | sed -e 's/^..../ffff/' | xauth -f ${XAUTH} nmerge -
opts+=("-v" "${XSOCK}:${XSOCK}:rw")
opts+=("-v" "${XAUTH}:/home/user/.Xauthority:ro")

if $do_sound; then
    _host_pulse="/run/user/${_host_uid}/pulse/native"
    if [ ! -S $_host_pulse ]; then
        echo "PulseAudio does not seem active (${_host_pulse} not found)"
        run pulseaudio --start
    fi
    opts+=("-i" "-v" "${_host_pulse}:/run/user/1000/pulse/native")
fi

opts+=("--net=host" "--ipc=host")
if [ -n "${mytz}" ]; then
    opts+=("-e" "TZ=/usr/share/zoneinfo/${mytz}")
fi

if [ -n "${name}" ]; then
    opts+=("--name" "${name}")
fi

opts+=("--device=/dev/dri:/dev/dri")
opts+=("--device=/dev/snd:/dev/snd")
opts+=("--group-add=18")


dri_card="/dev/dri/card0"
dri_mode=$(stat --printf=%f "$dri_card")
if [ $(( 16#${dri_mode} % 8 )) -eq 0 ]; then
    dri_group=$(stat --printf=%g "$dri_card")
    opts+=("--group-add=${dri_group}")
fi

run docker run --privileged --rm -e DISPLAY \
        "${opts[@]}" ${image} ${cmd} ${cmdargs}
